spring:
  profiles: "local"
  application.name: "microservice-example"

  data.mongodb.uri: "mongodb://127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb"

  kafka:
    consumer-enabled: true
    bootstrap-servers: ${kafka_bootstrap_servers:localhost:9092}
    properties:
      sasl:
        jaas:
          config: org.apache.kafka.common.security.plain.PlainLoginModule required username=${kafka_username:'admin'} password=${kafka_password:'admin-secret'};
        mechanism: PLAIN
      security:
        protocol: SASL_PLAINTEXT
    consumer:
      auto-offset-reset: earliest
      group-id: example
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      max-poll-records: 1
      fetch-max-wait: 36000
      enable-auto-commit: false
      client-id: example
    producer:
      client-id: example
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      retries: 2
    jaas:
      enabled: true
    listener:
      poll-timeout: 1800000
      concurrency: 1
      ack-mode: manual_immediate


eureka:
  client:
    healthcheck:
      enabled: true

#  instance:
#    nonSecurePortEnabled: false
#    securePortEnabled: true
#    hostname: "localhost"
#    statusPageUrl: 'https://${eureka.instance.hostname}:${server.port}/actuator/info'
#    healthCheckUrl: 'https://${eureka.instance.hostname}:${server.port}/health'
#    homePageUrl: 'https://${eureka.instance.hostname}:${server.port}/'

---

spring:
  profiles: "custom"
